{"version":3,"sources":["../../server/resolvers/alert.js"],"names":["Query","allAlerts","Alert","find","populate","alerts","console","log","_","districtName","geo","types","type","Mutation","createAlert","description","lat","long","userId","user","geoUrl","axios","get","res","data","geoplugin_region","alert","User","findById","id","currentUser","save","push","ok","ALERT_ERR"],"mappings":"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","sourcesContent":["import Alert from \"../models/Alert.js\";\nimport User from \"../models/User.js\";\nimport showErr from '../utils/showErr';\nimport { ALERT_ERR } from \"../constants\";\nimport { districtNameFormatter } from \"../utils/districtNameFormatter\";\nimport { typeFormatter } from \"../utils/typeFormatter\";\nimport axios from 'axios';\n\n\nexport default {\n\tQuery: {\n\t\tallAlerts: async () => {\n\t\t\ttry {\n\t\t\t\tconst alerts = await Alert.find({}).populate(\"user\")\n\t\t\t\treturn alerts\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t},\n\t\talerts: async (_, { districtName }) => {\n\t\t\ttry {\n\t\t\t\tconst alerts = Alert.find({ geo: districtNameFormatter(districtName) }).populate(\"user\")\n\t\t\t\treturn alerts\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t},\n\t\ttypes: async (_, { type }) => {\n\t\t\ttry {\n\t\t\t\tconst alerts = Alert.find({ type: typeFormatter(type) }).populate(\"user\")\n\t\t\t\treturn alerts\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t}\n\t},\n\tMutation: {\n\t\tcreateAlert: async (_, { type, description, lat, long, userId }, { user }) => {\n\t\t\tconst geoUrl = `http://www.geoplugin.net/extras/location.gp?lat=${lat}&lon=${long}&format=json`\n\t\t\tconst res = await axios.get(geoUrl)\n\t\t\ttry {\n\t\t\t\tconst alert = await new Alert({ type, description, lat, long, geo: res.data.geoplugin_region })\n\t\t\t\tif (user) {\n\t\t\t\t\tconst currentUser = await User.findById(user.id)\n\t\t\t\t\talert.user = currentUser\n\t\t\t\t\tawait alert.save(alert)\n\t\t\t\t\tcurrentUser.alerts.push(alert)\n\t\t\t\t\tawait currentUser.save()\n\t\t\t\t\treturn { ok: true, alert }\n\t\t\t\t} else {\n\t\t\t\t\tconst currentUser = await User.findById(userId)\n\t\t\t\t\talert.user = currentUser\n\t\t\t\t\tawait alert.save(alert)\n\t\t\t\t\tcurrentUser.alerts.push(alert)\n\t\t\t\t\tawait currentUser.save()\n\t\t\t\t\treturn { ok: true, alert }\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\treturn showErr(false, \"alert\", ALERT_ERR)\n\t\t\t}\n\t\t}\n\t}\n}\n"],"file":"alert.js"}